# Generated by Django 3.2 on 2025-01-18 08:19

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, verbose_name='Название категории')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='Код категории (создаётся автоматически)')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Gem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, verbose_name='Название драгоценного камня')),
                ('slug', models.SlugField(max_length=200, verbose_name='Код драгоценного камня (создаётся автоматически)')),
                ('clarity', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Чистота')),
                ('color', models.CharField(choices=[('red', 'красный'), ('orange', 'оранжевый'), ('yellow', 'жёлтый'), ('green', 'зелёный'), ('sky blue', 'голубой'), ('blue', 'синий'), ('purple', 'фиолетовый'), ('white', 'белый'), ('black', 'чёрный'), ('brown', 'коричневый'), ('pink', 'розовый')], max_length=8, verbose_name='Цвет')),
            ],
            options={
                'verbose_name': 'Драгоценный камень',
                'verbose_name_plural': 'Драгоценные камни',
                'ordering': ('name',),
                'index_together': {('id', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='Metal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, verbose_name='Название металла')),
                ('slug', models.SlugField(max_length=200, verbose_name='Код металла (создаётся автоматически)')),
                ('alloy', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)], verbose_name='Проба')),
            ],
            options={
                'verbose_name': 'Металл',
                'verbose_name_plural': 'Металлы',
                'ordering': ('name',),
                'index_together': {('id', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, verbose_name='Название ювелирного изделия')),
                ('slug', models.SlugField(max_length=200, verbose_name='Код ювелирного изделия (создаётся автоматически)')),
                ('image', models.ImageField(blank=True, upload_to='products/%Y/%m/%d', verbose_name='Фото')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, verbose_name='Вес одного ювелирного изделия')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('available', models.BooleanField(default=True, verbose_name='Доступность')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='jewellery_shop.category', verbose_name='Категория ювелирного изделия')),
            ],
            options={
                'verbose_name': 'Ювелирное изделие',
                'verbose_name_plural': 'Ювелирные изделия',
                'ordering': ('name',),
                'index_together': {('id', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='Metals_for_Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Вес металла в одном изделии')),
                ('metal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jewellery_shop.metal', verbose_name='Металл')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metals_for_Products', to='jewellery_shop.product', verbose_name='Ювелирное изделие')),
            ],
            options={
                'verbose_name': 'Металлы в ювелирном изделии',
                'verbose_name_plural': 'Металлы в ювелирных изделиях',
            },
        ),
        migrations.CreateModel(
            name='Gems_for_Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Вес одного камня')),
                ('cut', models.CharField(choices=[('c1', 'круг'), ('c2', 'груша'), ('c3', 'овал'), ('c4', 'маркиз'), ('c5', 'сердце'), ('c6', 'принцесса'), ('c7', 'изумруд'), ('c8', 'багет'), ('c9', 'квадрат'), ('c10', 'восьмиугольник'), ('c11', 'французская'), ('c12', 'античная')], max_length=3, verbose_name='Огранка камня')),
                ('count', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Количество камней в одном изделии')),
                ('gem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jewellery_shop.gem', verbose_name='Драгоценный камень')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gems_for_Products', to='jewellery_shop.product', verbose_name='Ювелирное изделие')),
            ],
            options={
                'verbose_name': 'Драгоценные камни в ювелирном изделии',
                'verbose_name_plural': 'Драгоценные камни в ювелирных изделиях',
            },
        ),
    ]
